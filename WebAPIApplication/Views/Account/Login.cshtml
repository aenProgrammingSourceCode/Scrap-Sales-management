@model IdentitySample.Models.LoginViewModel
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Log in";
} 

@if (Request.IsAuthenticated && User.IsInRole("Incomplete"))
{
    <script type="text/javascript">
    $(document).ready(function () {
        GetRoleByUserId();
    });

    function GetRoleByUserId() {
            var Identity = '@Html.Encode(HttpContext.Current.User.Identity.GetUserId())';
            $.ajax({
                url: '/api/LocalUser/GetUserRole?userId='+Identity,
                type: 'GET',
                cache: false,
                async: true,
                dataType: 'json',
                contentType: 'application/json;charset-utf-8',
                success: function (data) {
                    $.each(data, function (k, v) {
                        if (v.RoleId == "9609be1e-9b7e-488d-ad07-8fa6c684d27b") {
                           window.location.href = "/Home/ValidateAuth";
                        }
                    });
                },
                error: function (r) {
                    var jsonError = JSON.stringify(r);
                    alert("error" + jsonError);
                }

            });
        }
    </script>
}
<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" id="loginForward" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register a new user?", "Register")
                </p>
                <p>
                    @Html.ActionLink("Forget your password?", "ForgotPassword")
                </p>
            }
        </section>
    </div>
    @*<div class="col-md-4">
        <section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new IdentitySample.Models.ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>
    </div>*@
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}